<?xml version="1.0" encoding="UTF-8" ?>
<!--
 ~ Author:  yingchengpeng
 ~ Date: 2018/08/10
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Article">
    <resultMap id="ArticleMap" type="Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="category_id" property="categoryId"/>
        <result column="category_name" property="categoryName"/>
        <result column="image" property="image"/>
        <result column="synopsis" property="synopsis"/>
        <result column="user_id" property="userId"/>
        <result column="author" property="author"/>
        <result column="visible" property="visible"/>
        <result column="deleted" property="deleted"/>
        <result column="publish_at" property="publishAt"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        `sky_article`
    </sql>

    <sql id="cols_all">
        `id`, <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        `title`, `category_id`, `category_name`, `image`, `synopsis`, `user_id`, `author`, `visible`, `deleted`, `publish_at`, `created_at`, `updated_at`
    </sql>

    <sql id="vals">
         #{title}, #{categoryId}, #{categoryName}, #{image}, #{synopsis}, #{userId}, #{author}, #{visible}, #{deleted}, now(), now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="id != null">AND `id` = #{id}</if>
            <if test="title != null">AND `title` = #{title}</if>
            <if test="categoryId != null">AND `category_id` = #{categoryId}</if>
            <if test="categoryName != null">AND `category_name` = #{categoryName}</if>
            <if test="userId != null">AND `user_id` = #{userId}</if>
            <if test="author != null">AND `author` = #{author}</if>
            <if test="visible != null">AND `visible` = #{visible}</if>
            <if test="publishAtStart != null">AND `publish_at` &gt;= #{publishAtStart}</if>
            <if test="publishAtEnd != null">AND `publish_at` &lt;= #{publishAtEnd}</if>
            AND `deleted` = 0
        </where>
    </sql>

    <sql id="update_criteria">
        <set>
            <if test="title != null">`title` = #{title},</if>
            <if test="categoryId != null">`category_id` = #{categoryId},</if>
            <if test="categoryName != null">`category_name` = #{categoryName},</if>
            <if test="image != null">`image` = #{image},</if>
            <if test="synopsis != null">`synopsis` = #{synopsis},</if>
            <if test="visible != null">`visible` = #{visible},</if>
            `publish_at` = now(), `updated_at` = now()
        </set>
    </sql>

    <select id="findById" parameterType="long" resultMap="ArticleMap">
        SELECT
            <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE `id` = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="ArticleMap">
        SELECT
        <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE `id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="list" parameterType="map" resultMap="ArticleMap">
        SELECT
        <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <insert id="create" parameterType="Article" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <update id="update" parameterType="Article">
        UPDATE
        <include refid="tb"/>
        <include refid="update_criteria"/>
        WHERE `id` = #{id}
    </update>

    <!-- 计数 -->
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <!-- 分页查询 -->
    <select id="paging" parameterType="map" resultMap="ArticleMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC LIMIT #{offset}, #{limit}
    </select>

    <update id="delete" parameterType="long">
        UPDATE <include refid="tb"/>
        SET `deleted` = 1, `updated_at` = now()
        where `id` = #{id}
    </update>

    <update id="updateCategoryName" parameterType="map">
        UPDATE <include refid="tb"/>
        SET `category_name` = #{categoryName}, `updated_at` = now()
        WHERE `category_id` = #{categoryId} AND `deleted` = 0
    </update>

    <!-- 计数 -->
    <select id="countPublishDate" parameterType="map" resultType="long">
        SELECT COUNT(DISTINCT DATE_FORMAT(`publish_at`,'%Y-%m-%d'))
        FROM
        <include refid="tb"/>
    </select>

    <!-- 分页查询 -->
    <select id="pagingPublishDate" parameterType="map" resultType="string">
        SELECT `publish_date`
        FROM (
            SELECT
              DISTINCT DATE_FORMAT(`publish_at`,'%Y-%m-%d') as `publish_date`
            FROM
            <include refid="tb"/>
            GROUP BY  `publish_date`
        ) AS tmp
        ORDER BY `publish_date` DESC LIMIT #{offset}, #{limit}
    </select>

</mapper>